name: gleam_version

description: Get Gleam version as set in gleam.toml (min version).

inputs:
  fallback-version:
    description: "Fallback Gleam version"
    required: false
outputs:
  gleam-version:
    description: "Gleam version"
    value: ${{ steps.output-version.outputs.VERSION }}

runs:
  using: composite
  steps:
    - uses: aslilac/setup@v1
      with:
        archives: |
          https://mckayla.cloud/tomlq-linux-x64.tar.gz
    - name: Get raw version
      id: raw-version
      shell: bash
      run: |
        echo "VERSION_RAW=$(tomlq gleam -f gleam.toml)" >> "$GITHUB_OUTPUT"
    - name: Get version
      id: gleam-version
      shell: bash
      env:
        RAW_VERSION: ${{ steps.raw-version.outputs.VERSION_RAW }}
      run: |
        echo "Raw version is: $RAW_VERSION"
        echo $RAW_VERSION | sed -nE "s/^.*([[:digit:]]+\.[[:digit:]]+(\.[[:digit:]]+))/\1/p" > gleam_version.txt
        echo "GLEAM_VERSION=$(cat gleam_version.txt)" >> "$GITHUB_OUTPUT"
    - name: Output Version
      id: output-version
      shell: bash
      env:
        GLEAM_VERSION: ${{ steps.gleam-version.outputs.GLEAM_VERSION }}
        FALLBACK_GLEAM_VERSION: ${{ inputs.fallback-version }}
      run: |
        if [[ ! -z $GLEAM_VERSION ]]; then
          echo "VERSION=$GLEAM_VERSION" >> "$GITHUB_OUTPUT"
        elif [[ ! -z $FALLBACK_GLEAM_VERSION ]]; then
          echo "VERSION=$FALLBACK_GLEAM_VERSION" >> "$GITHUB_OUTPUT"
        else
          echo "Could not set Gleam version (failed to parse gleam.toml and no fallback provided)"
          exit 1
        fi
